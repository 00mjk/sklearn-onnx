.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_backend.py>`     to download the full example code or to run this example in your browser via Binder
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_backend.py:


.. _l-example-backend-api:

ONNX Runtime Backend for ONNX
=============================

.. index:: backend

*ONNX Runtime* extends the
`onnx backend API <https://github.com/onnx/onnx/blob/master/docs/
ImplementingAnOnnxBackend.md>`_
to run predictions using this runtime.
Let's use the API to compute the prediction
of a simple logistic regression model.


.. code-block:: default

    import skl2onnx
    import onnx
    import sklearn
    import numpy
    from onnxruntime import get_device, __version__ as ort_version
    import numpy as np
    import onnxruntime.backend as backend
    from skl2onnx.tutorial import logreg_iris_onnx


    model = logreg_iris_onnx()

    rep = backend.prepare(model, 'CPU')
    x = np.array([[-1.0, -2.0, 5.0, 6.0],
                  [-1.0, -2.0, -3.0, -4.0],
                  [-1.0, -2.0, 7.0, 8.0]],
                 dtype=np.float32)
    label, proba = rep.run(x)
    print("label={}".format(label))
    print("probabilities={}".format(proba))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    label=[2 0 2]
    probabilities=[{0: -5.143724024492258e-08, 1: 0.13702628016471863, 2: 0.862973690032959}, {0: 0.5000000596046448, 1: 0.49999961256980896, 2: 3.577759173367667e-07}, {0: -5.761004473470166e-08, 1: 0.03346383199095726, 2: 0.9665361642837524}]




The device depends on how the package was compiled,
GPU or CPU.


.. code-block:: default

    print(get_device())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    CPU




The backend can also directly load the model
without using *onnx*.


.. code-block:: default

    name = 'logreg_iris.onnx'
    with open(name, 'wb') as r:
        r.write(model.SerializeToString())

    rep = backend.prepare(name, 'CPU')
    x = np.array([[-1.0, -2.0, -3.0, -4.0],
                  [-1.0, -2.0, -3.0, -4.0],
                  [-1.0, -2.0, -3.0, -4.0]],
                 dtype=np.float32)
    label, proba = rep.run(x)
    print("label={}".format(label))
    print("probabilities={}".format(proba))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    label=[0 0 0]
    probabilities=[{0: 0.5000000596046448, 1: 0.49999961256980896, 2: 3.577759173367667e-07}, {0: 0.5000000596046448, 1: 0.49999961256980896, 2: 3.577759173367667e-07}, {0: 0.5000000596046448, 1: 0.49999961256980896, 2: 3.577759173367667e-07}]




The backend API is implemented by other frameworks
and makes it easier to switch between multiple runtimes
with the same API.

**Versions used for this example**


.. code-block:: default


    print("numpy:", numpy.__version__)
    print("scikit-learn:", sklearn.__version__)
    print("onnx: ", onnx.__version__)
    print("onnxruntime: ", ort_version)
    print("skl2onnx: ", skl2onnx.__version__)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    numpy: 1.19.1
    scikit-learn: 0.23.2
    onnx:  1.7.0
    onnxruntime:  1.4.0
    skl2onnx:  1.7.1





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.042 seconds)


.. _sphx_glr_download_auto_examples_plot_backend.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: /../../cus/lib/python3.7/site-packages/sphinx_gallery/_static/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/microsoft/skl2onnx/master?urlpath=lab/tree/notebooks/auto_examples/plot_backend.ipynb
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_backend.py <plot_backend.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_backend.ipynb <plot_backend.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
